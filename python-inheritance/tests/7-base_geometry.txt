The 7-base_geometry module
==========================

Using ``integer_validator()``
-----------------------------

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

    Given a value, check to see if it is a valid integer

    Should raise TypeError if no parameters are given:
    >>> bg = BaseGeometry()
    >>> bg.integer_validator()
    Traceback (most recent call last):
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    Should raise TypeError if value is not an integer:
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", "Betty")
    Traceback (most recent call last):
    TypeError: name must be an integer

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("float", 1.3)
    Traceback (most recent call last):
    TypeError: float must be an integer

    Should raise ValueError if value is less than or equal to 0:
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
    ValueError: age must be greater than 0

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("distance", -4)
    Traceback (most recent call last):
    ValueError: distance must be greater than 0
